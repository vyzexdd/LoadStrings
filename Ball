local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local player = game.Players.LocalPlayer
local character = player.Character

local SPEED_MULTIPLIER = 30
local JUMP_POWER = 60
local JUMP_GAP = 0.3

local originalHumanoid = character:WaitForChild("Humanoid")
local originalWalkSpeed = originalHumanoid.WalkSpeed
local originalJumpPower = originalHumanoid.JumpPower
local ballEnabled = false

local canJump = true

local function enableBall()
originalHumanoid.WalkSpeed = originalWalkSpeed
originalHumanoid.JumpPower = originalJumpPower

for i,v in ipairs(character:GetDescendants()) do
if v:IsA("BasePart") then
v.CanCollide = false
end
end

local ball = character.HumanoidRootPart
ball.Shape = Enum.PartType.Ball
ball.Size = Vector3.new(5, 5, 5)
local humanoid = character:WaitForChild("Humanoid")
humanoid.PlatformStand = true

local params = RaycastParams.new()
params.FilterType = Enum.RaycastFilterType.Blacklist
params.FilterDescendantsInstances = {character}

local tc = RunService.RenderStepped:Connect(function(delta)
if not ballEnabled then return end

ball.CanCollide = true
if UserInputService:GetFocusedTextBox() then return end
if UserInputService:IsKeyDown("W") then
ball.RotVelocity -= Camera.CFrame.RightVector * delta * SPEED_MULTIPLIER
end
if UserInputService:IsKeyDown("A") then
ball.RotVelocity -= Camera.CFrame.LookVector * delta * SPEED_MULTIPLIER
end
if UserInputService:IsKeyDown("S") then
ball.RotVelocity += Camera.CFrame.RightVector * delta * SPEED_MULTIPLIER
end
if UserInputService:IsKeyDown("D") then
ball.RotVelocity += Camera.CFrame.LookVector * delta * SPEED_MULTIPLIER
end
end)

UserInputService.JumpRequest:Connect(function()
if canJump then
local result = workspace:Raycast(
ball.Position,
Vector3.new(0, -((ball.Size.Y / 2) + JUMP_GAP), 0),
params
)
if result then
canJump = false
ball.Velocity = ball.Velocity + Vector3.new(0, JUMP_POWER, 0)
wait(1)
canJump = false
end
end
end)

Camera.CameraSubject = ball
end

local function disableBall()
local humanoid = character:WaitForChild("Humanoid")
humanoid.PlatformStand = false
humanoid.WalkSpeed = originalWalkSpeed
humanoid.JumpPower = originalJumpPower

character.HumanoidRootPart.Velocity = Vector3.zero
character.HumanoidRootPart.RotVelocity = Vector3.zero

for i,v in ipairs(character:GetDescendants()) do
if v:IsA("BasePart") then
v.CanCollide = true
end
end

local ball = character.HumanoidRootPart
ball.Shape = Enum.PartType.Block
ball.Size = Vector3.new(2, 5, 2)

ball.CFrame = ball.CFrame - Vector3.new(0, 1, 0)

Camera.CameraSubject = humanoid
end

UserInputService.InputBegan:Connect(function(input, gameProcessed)
if gameProcessed then return end

if input.KeyCode == Enum.KeyCode.T then
ballEnabled = not ballEnabled

if ballEnabled then
enableBall()
else
disableBall()
end
end
end)
